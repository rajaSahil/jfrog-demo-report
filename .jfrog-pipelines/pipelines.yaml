template: true   # required for local templates
valuesFilePath: ./values.yaml

resources:
  - name: docker_image
    type: Image
    configuration:
      registry: {{ .Values.docker.dockerIntegrationName }}
      imageName: {{ .Values.docker.imageName }}
      imageTag: {{ .Values.docker.imageTag }}
      autoPull: true

  - name: install_task_yaml
    type: GitRepo
    configuration:
      path: {{ .Values.installTaskRepo.path }}
      gitProvider: {{ .Values.installTaskRepo.gitProvider }}
      branches:
        include: {{ .Values.installTaskRepo.mainBranch }}
      cloneProtocol: {{ .Values.installTaskRepo.protocol }}
      buildOn:
        commit: {{ .Values.installTaskRepo.buildOnCommit }}

  - name: report_task_yaml
    type: GitRepo
    configuration:
      path: {{ .Values.reportTaskRepo.path }}
      gitProvider: {{ .Values.reportTaskRepo.gitProvider }}
      branches:
        include: {{ .Values.reportTaskRepo.mainBranch }}
      cloneProtocol: {{ .Values.reportTaskRepo.protocol }}
      buildOn:
        commit: {{ .Values.reportTaskRepo.buildOnCommit }}

pipelines:
  - name: {{ .Values.docker.pipelineName }}
    steps:
      - name: create_k3s_cluster
        type: Bash
        configuration:
          runtime:
            type: host
          integrations:
            - name: jfrog_demo_report
        execution:
          onExecute:
            - echo ${res_install_task_yaml_resourcePath}
            - echo ${res_report_task_yaml_resourcePath}
            - echo ${IN_ignore_paths}
            - apt-get update
            - sudo rm /var/lib/dpkg/lock-frontend || true
            - sudo rm /var/lib/dpkg/lock || true
            - sudo rm /var/lib/apt/lists/lock || true
            - sudo rm /var/cache/apt/archives/lock || true
            - sudo apt-get install socat
            - git clone https://github.com/kubearmor/KubeArmor.git
            - cd KubeArmor/contribution/k3s
            - chmod +x install_k3s.sh
            - ./install_k3s.sh
          onSuccess:
            - echo "Successfully create k3s cluster"
          onFailure:
            - echo "Failed to create k3s cluster"

      - name: test_{{ .Values.task.installTask }}
        type: Bash
        configuration:
          inputResources:
            - name: docker_image
            - name: install_task_yaml
          runtime:
            type: host
          integrations:
            - name: jfrog_demo_report
        execution:
          onExecute:
            - task: $res_install_task_yaml_resourcePath
              id: install_task

      - name: run_e2e_tests
        type: Bash
        configuration:
          runtime:
            type: host
          integrations:
            - name: jfrog_demo_report
        execution:
          onExecute:
            - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            - chmod 700 get_helm.sh
            - ./get_helm.sh
            - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
            - helm repo update
            - helm install kps prometheus-community/kube-prometheus-stack
          onSuccess:
            - echo "e2e tests ran successfully"
          onFailure:
            - echo "e2e tests failed"


      - name: test_{{ .Values.task.reportTask }}
        type: Bash
        configuration:
          inputResources:
            - name: docker_image
            - name: report_task_yaml
          runtime:
            type: host
          integrations:
            - name: jfrog_demo_report
        execution:
          onExecute:
            - task: $res_report_task_yaml_resourcePath
              id: report_task