template: true   # required for local templates
valuesFilePath: ./values.yaml

resources:
  - name: docker_image
    type: Image
    configuration:
      registry: {{ .Values.docker.dockerIntegrationName }}
      imageName: {{ .Values.docker.imageName }}
      imageTag: {{ .Values.docker.imageTag }}
      autoPull: true

pipelines:
  - name: {{ .Values.docker.pipelineName }}
    steps:
      - name: run_image
        type: Bash
        configuration:
          inputResources:
            - name: docker_image
          runtime:
            type: host
          nodePool: default-dynamic-nodepool
        execution:
          onExecute:
#            - curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.19.0/kind-linux-amd64
#            - chmod +x ./kind
#            - sudo mv ./kind /usr/local/bin/kind
#            - kind create cluster -n test-k8s-integration
            - apt-get update
#            - sudo kill -9 $(sudo lsof /var/lib/dpkg/lock-frontend)
#            - sudo killall apt apt-get | true
#            - kill -9 $(lsof /var/lib/dpkg/lock-frontend) | true
#            - sudo rm /var/lib/dpkg/lock-frontend |true
            - sudo rm /var/lib/dpkg/lock-frontend || true
            - sudo rm /var/cache/apt/archives/lock || true
            -
#            - apt install socat
            - sudo apt-get install socat
            - git clone https://github.com/kubearmor/KubeArmor.git
            - cd KubeArmor/contribution/k3s
            - chmod +x install_k3s.sh
            - ./install_k3s.sh
            - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            - curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
            - echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
            - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            - kubectl version --client
            - kubectl wait --for=condition=Ready nodes --all --timeout=120s
            - kubectl get all -A
            - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            - chmod 700 get_helm.sh
            - ./get_helm.sh
            - git clone https://github.com/rajaSahil/accuknox-cli.git
            - cd accuknox-cli
            - git fetch -a
            - git checkout feat-report
            - ./accuknox-cli install
#            - kubectl wait --for=condition=Ready pods --all --timeout=120s
            - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
            - helm repo update
            - helm install kps prometheus-community/kube-prometheus-stack
            - kubectl create deployment nginx --image=nginx
            - POD=$(kubectl get pod -l app=nginx -o name)
            - kubectl get all -A
            #            - sleep 200
            - mkdir downloads
            - sleep 200
            - ./accuknox-cli  report -b "baseline/report.json" > downloads/table
            - mv /tmp/report-*.json downloads/report.json
            - mv /tmp/diff-report-*.json downloads/diff-report.json
            - mv /tmp/diff-report-*.md downloads/diff-report.md
            - cat downloads/table
